{"ast":null,"code":"var _jsxFileName = \"/Users/takiacademy/Desktop/pdf-editor/src/components/pdfEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PdfEditor(_ref) {\n  _s();\n  let {\n    pdfFile\n  } = _ref;\n  const [text, setText] = useState(\"\");\n  const [pageIndex, setPageIndex] = useState(0);\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  function addTextToPdf() {\n    // Use a PDF editing library (e.g., pdf-lib) to add text to the PDF\n    // Here's an example using the pdf-lib library\n    const {\n      PDFDocument,\n      StandardFonts\n    } = require(\"pdf-lib\");\n\n    // Load the PDF document\n    PDFDocument.load(pdfFile).then(pdfDoc => {\n      // Get the first page of the PDF\n      const page = pdfDoc.getPages()[pageIndex];\n\n      // Choose a font and font size\n      const font = pdfDoc.embedFont(StandardFonts.Helvetica);\n      const fontSize = 20;\n\n      // Add the text to the page at the specified position\n      page.drawText(text, {\n        x: position.x,\n        y: page.getSize().height - position.y - fontSize,\n        size: fontSize,\n        font,\n        color: \"black\"\n      });\n\n      // Generate a new PDF file with the added text\n      return pdfDoc.save();\n    }).then(newPdfBytes => {\n      // Download the new PDF file\n      const blob = new Blob([newPdfBytes], {\n        type: \"application/pdf\"\n      });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.download = \"edited.pdf\";\n      link.click();\n    }).catch(error => {\n      console.error(\"Error editing PDF:\", error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pdf-editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"PDF Editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"text-input\",\n        children: \"Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"text-input\",\n        type: \"text\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"page-input\",\n        children: \"Page Index:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"page-input\",\n        type: \"number\",\n        min: 0,\n        max: pdfFile.numPages - 1,\n        value: pageIndex,\n        onChange: e => setPageIndex(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"x-input\",\n        children: \"X Position:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"x-input\",\n        type: \"number\",\n        value: position.x,\n        onChange: e => setPosition(prevPosition => ({\n          ...prevPosition,\n          x: parseInt(e.target.value)\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"y-input\",\n        children: \"Y Position:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"y-input\",\n        type: \"number\",\n        value: position.y,\n        onChange: e => setPosition(prevPosition => ({\n          ...prevPosition,\n          y: parseInt(e.target.value)\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTextToPdf,\n      children: \"Add Text to PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(PdfEditor, \"hIiWx/ecAE0sbXGUrn7+Ym2jJgk=\");\n_c = PdfEditor;\nvar _c;\n$RefreshReg$(_c, \"PdfEditor\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PdfEditor","_ref","_s","pdfFile","text","setText","pageIndex","setPageIndex","position","setPosition","x","y","addTextToPdf","PDFDocument","StandardFonts","require","load","then","pdfDoc","page","getPages","font","embedFont","Helvetica","fontSize","drawText","getSize","height","size","color","save","newPdfBytes","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","click","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","min","max","numPages","parseInt","prevPosition","onClick","_c","$RefreshReg$"],"sources":["/Users/takiacademy/Desktop/pdf-editor/src/components/pdfEditor.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport default function PdfEditor({ pdfFile }) {\n    const [text, setText] = useState(\"\");\n    const [pageIndex, setPageIndex] = useState(0);\n    const [position, setPosition] = useState({ x: 0, y: 0 });\n\n    function addTextToPdf() {\n        // Use a PDF editing library (e.g., pdf-lib) to add text to the PDF\n        // Here's an example using the pdf-lib library\n        const { PDFDocument, StandardFonts } = require(\"pdf-lib\");\n\n        // Load the PDF document\n        PDFDocument.load(pdfFile)\n            .then((pdfDoc) => {\n                // Get the first page of the PDF\n                const page = pdfDoc.getPages()[pageIndex];\n\n                // Choose a font and font size\n                const font = pdfDoc.embedFont(StandardFonts.Helvetica);\n                const fontSize = 20;\n\n                // Add the text to the page at the specified position\n                page.drawText(text, {\n                    x: position.x,\n                    y: page.getSize().height - position.y - fontSize,\n                    size: fontSize,\n                    font,\n                    color: \"black\",\n                });\n\n                // Generate a new PDF file with the added text\n                return pdfDoc.save();\n            })\n            .then((newPdfBytes) => {\n                // Download the new PDF file\n                const blob = new Blob([newPdfBytes], { type: \"application/pdf\" });\n                const url = URL.createObjectURL(blob);\n                const link = document.createElement(\"a\");\n                link.href = url;\n                link.download = \"edited.pdf\";\n                link.click();\n            })\n            .catch((error) => {\n                console.error(\"Error editing PDF:\", error);\n            });\n    }\n\n    return (\n        <div className=\"pdf-editor\">\n            <h2>PDF Editor</h2>\n            <div>\n                <label htmlFor=\"text-input\">Text:</label>\n                <input\n                    id=\"text-input\"\n                    type=\"text\"\n                    value={text}\n                    onChange={(e) => setText(e.target.value)}\n                />\n            </div>\n            <div>\n                <label htmlFor=\"page-input\">Page Index:</label>\n                <input\n                    id=\"page-input\"\n                    type=\"number\"\n                    min={0}\n                    max={pdfFile.numPages - 1}\n                    value={pageIndex}\n                    onChange={(e) => setPageIndex(parseInt(e.target.value))}\n                />\n            </div>\n            <div>\n                <label htmlFor=\"x-input\">X Position:</label>\n                <input\n                    id=\"x-input\"\n                    type=\"number\"\n                    value={position.x}\n                    onChange={(e) => setPosition((prevPosition) => ({ ...prevPosition, x: parseInt(e.target.value) }))}\n                />\n            </div>\n            <div>\n                <label htmlFor=\"y-input\">Y Position:</label>\n                <input\n                    id=\"y-input\"\n                    type=\"number\"\n                    value={position.y}\n                    onChange={(e) => setPosition((prevPosition) => ({ ...prevPosition, y: parseInt(e.target.value) }))}\n                />\n            </div>\n            <button onClick={addTextToPdf}>Add Text to PDF</button>\n        </div>\n    );\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}